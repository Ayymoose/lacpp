#pragma once

#include "Renderable.h"
#include "Controllable.h"
#include "Resource.h"
#include "Depth.h"
#include "Renderer.h"
#include "Keyboard.h"
#include "InputControl.h"
#include "Controller.h"
#include "Engine.h"
#include "Clock.h"

namespace Zelda
{

    enum LocationName
    {
        LN_MYSTERIOUS_WOODS,
        LN_KOHOLINT_PRAIRIE,
        LN_WITCH_HUT,
        LN_DREAM_SHRINE,
        LN_QUADRUPULETS_HOUSE,
        LN_MABE_VILLAGE,
        LN_MARIN_AND_TARIN_HOUSE,
        LN_MADAM_MEOWMEOW_HOUSE,
        LN_VILLAGE_LIBRARY,
        LN_OLD_MAN_ULRIRA_HOUSE,
        LN_TELEPHONE_BOOTH,
        LN_SOUTH_OF_THE_VILLAGE,
        LN_TAIL_CAVE,
        LN_TORONBO_SHORES,
        LN_SALE_HOUSE_BANANA,
        LN_CRAZY_TRACY_HOUSE,
        // TODO: Find out rest of map
    };

    // One of 4 location types
    enum LocationType
    {
        LT_NONE,
        LT_SHOP,
        LT_OWL,
        LT_DUNGEON,
        LT_UNKNOWN
    };

    typedef struct
    {
        bool visited;                   // Did we visit this location
        LocationType locationType;      // Type of the location (see above)
        LocationName locationName;      // The name of the location
    } WorldmapLocation;

    enum WorldmapSprites
    {
        WORLDMAP_AREA_UNVISITED = 0,
        WORLDMAP_AREA_ARROW,
        WORLDMAP_AREA_SCOPE,
        WORLDMAP_AREA_SHOP,
        WORLDMAP_AREA_UNKNOWN,
        WORLDMAP_AREA_DUNGEON,
        WORLDMAP_AREA_OWL,
        WORLDMAP_AREA_LOCATION
    };

    // Worldmap dimensions
    constexpr int WORLDMAP_MAX_X = 16;
    constexpr int WORLDMAP_MAX_Y = 16;

    // Starting point of (0,0) on top left of map
    constexpr int WORLDMAP_START_X = 17;
    constexpr int WORLDMAP_START_Y = 9;

    // Initial starting position of scope (Marin and Tarin house)
    constexpr uint8_t WORLDMAP_INITIAL_POS_X = 2;
    constexpr uint8_t WORLDMAP_INITIAL_POS_Y = 8;

    #define WORLDMAP_SELECTOR_FPS (1.0f / 4.0f)

    class Worldmap : public Controllable, public Renderable
    {
    public:
        Worldmap();
        void control() noexcept override;
        void render(SDL_Renderer* renderer) noexcept override;
        void open() noexcept;
        void close() noexcept;
    private:
        // 16x16 world map
        // TODO: Update with correct place  names and locations
        WorldmapLocation m_worldmapLocation[WORLDMAP_MAX_X][WORLDMAP_MAX_Y] =
        {
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_SHOP, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {true, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {true, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {true, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {true, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {true, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {true, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {true, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_SHOP, LN_MYSTERIOUS_WOODS}, {true, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_UNKNOWN, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_OWL, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_OWL, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_DUNGEON, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_DUNGEON, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_UNKNOWN, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}},
            {{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{true, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS},{false, LT_NONE, LN_MYSTERIOUS_WOODS}, {false, LT_NONE, LN_MYSTERIOUS_WOODS}}
        };
        uint8_t m_scopeX;
        uint8_t m_scopeY;
        bool m_show;

        Clock m_scopeSelectTimer;
        bool m_scopeSelect;

        // Position of Link in the worldmap
        uint8_t m_worldX;
        uint8_t m_worldY;

        SDL_Rect m_worldmapSrcSprites[8] =
        {
            {110,162,7,7},   // WORLDMAP_AREA_UNVISITED
            {100,162,9,8},   // WORLDMAP_AREA_ARROW
            {108,84,16,16},   // WORLDMAP_AREA_SCOPE
            {140,130,30,30},   // WORLDMAP_AREA_SHOP
            {170,130,30,30},   // WORLDMAP_AREA_UNKNOWN
            {200,130,30,30},   // WORLDMAP_AREA_DUNGEON
            {230,130,30,30},   // WORLDMAP_AREA_OWL
            {110,152,8,8} // WORLDMAP_AREA_LOCATION
        };
    };

}