#include "Tilemap.h"
#include "Resource.h"
#include <cassert>

namespace Zelda
{

Tilemap::Tilemap()
{
	m_currentTileMap.tilemap = SpriteResource::SPR_RESOURCE_NONE;
	m_currentTileMap.roomsAcross = 0;
	m_currentTileMap.roomsDown = 0;

	//TODO: Implement room flattening to get rid of empty rooms (all one tile)

	// Autogenerated using python script
	TilemapInformation ti;
	ti.rooms =
	{
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{1,1,2,1,1,1,1,1,1,1},
				{3,4,5,4,4,4,6,7,6,4},
				{3,4,5,4,4,4,7,8,7,4},
				{3,4,5,4,4,4,4,4,4,4},
				{9,9,5,9,9,4,9,9,5,9},
				{10,11,5,4,4,4,4,4,5,3},
				{10,11,5,4,4,4,4,4,5,3},
				{10,10,12,12,12,12,12,12,12,12},
			}
		},
		{
			{
				{1,1,1,1,1,1,1,2,1,1},
				{4,6,7,6,4,4,4,5,4,3},
				{4,7,8,7,4,4,4,5,4,3},
				{4,4,4,4,4,4,9,5,9,9},
				{9,5,4,9,9,4,4,5,13,10},
				{3,5,4,4,4,4,4,5,13,10},
				{3,5,4,4,4,4,4,5,13,10},
				{12,12,12,12,12,12,12,12,10,10},
			}
		},
		{
			{
				{14,15,16,17,15,15,18,19,15,16},
				{20,21,22,23,24,24,23,25,21,22},
				{20,21,22,24,24,24,24,25,21,22},
				{20,21,22,23,24,24,23,25,21,22},
				{20,21,17,15,26,26,15,18,21,22},
				{20,21,21,21,24,24,21,21,21,22},
				{20,21,21,21,24,24,21,21,21,22},
				{27,28,28,28,29,30,28,28,28,31},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{19,15,15,15,15,32,15,15,15,16},
				{25,21,21,33,21,34,33,21,35,22},
				{25,21,33,21,21,21,21,33,21,36},
				{25,21,21,21,21,21,21,21,21,37},
				{25,21,21,21,21,21,21,21,21,22},
				{25,21,21,21,21,21,21,21,21,22},
				{38,39,21,21,21,21,21,21,40,31},
				{0,38,28,28,28,28,28,28,31,0},
			}
		},
		{
			{
				{19,15,15,32,15,15,15,15,15,15},
				{25,21,21,34,21,21,21,21,21,21},
				{41,24,24,24,42,24,42,24,24,24},
				{43,24,42,24,24,42,24,42,24,24},
				{25,21,21,21,21,21,21,21,21,21},
				{25,44,33,33,44,44,44,44,44,44},
				{25,21,21,21,24,24,24,24,24,24},
				{38,28,28,28,45,46,28,28,28,28},
			}
		},
		{
			{
				{15,15,15,15,15,15,15,15,15,16},
				{21,21,21,21,21,21,21,21,21,22},
				{24,24,24,42,24,24,42,24,21,22},
				{24,24,42,24,24,42,24,24,21,22},
				{21,21,21,21,42,21,24,42,21,22},
				{44,44,44,42,21,21,42,24,21,22},
				{24,24,24,24,24,24,24,24,21,22},
				{28,28,28,28,28,28,28,28,28,31},
			}
		},
		{
			{
				{3,4,47,4,4,47,4,4,47,4},
				{3,4,48,4,4,47,4,4,48,4},
				{3,4,49,4,4,48,4,4,49,4},
				{9,9,6,7,6,49,6,7,6,4},
				{3,4,7,8,7,4,7,8,7,4},
				{3,4,4,4,4,4,4,4,4,4},
				{3,50,50,4,50,4,4,4,4,4},
				{9,9,9,9,9,9,9,9,9,9},
			}
		},
		{
			{
				{4,4,4,4,4,9,9,5,9,9},
				{4,4,4,4,4,3,4,5,4,3},
				{4,4,4,4,4,3,4,5,4,3},
				{4,6,7,6,4,9,9,5,9,9},
				{4,7,8,7,4,4,4,5,4,3},
				{4,4,4,4,4,4,4,5,4,3},
				{4,4,4,4,50,4,50,5,50,3},
				{9,9,9,9,9,9,9,9,9,9},
			}
		},
		{
			{
				{14,15,15,15,51,52,15,15,15,16},
				{20,53,54,24,24,24,24,54,53,22},
				{20,53,24,24,24,24,24,24,53,22},
				{20,53,24,24,24,24,24,24,53,22},
				{20,53,24,24,24,24,24,24,53,22},
				{20,53,24,24,24,24,24,24,53,22},
				{20,53,55,24,24,24,24,55,53,22},
				{27,28,28,28,29,30,28,28,28,31},
			}
		},
		{
			{
				{19,15,15,15,15,15,15,15,15,16},
				{25,4,21,24,24,24,21,4,4,22},
				{25,4,21,24,21,24,21,4,4,22},
				{25,4,21,24,24,24,21,4,4,22},
				{25,56,33,33,21,33,33,56,56,22},
				{25,21,21,21,21,21,21,21,21,22},
				{25,21,21,21,21,21,21,21,21,22},
				{38,28,28,39,21,40,28,28,28,31},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{57,57,19,15,51,52,15,16,58,44},
				{57,19,18,21,21,21,59,22,60,21},
				{19,18,33,21,21,21,4,22,60,21},
				{25,21,21,21,21,33,4,22,61,62},
				{25,21,42,21,21,21,4,17,15,15},
				{25,21,21,21,21,21,56,56,56,56},
				{25,21,21,23,21,21,23,21,40,28},
				{25,21,21,21,21,21,21,21,22,0},
			}
		},
		{
			{
				{44,21,21,44,44,44,21,21,44,44},
				{21,21,21,21,21,21,21,21,21,21},
				{21,63,62,62,62,62,62,64,21,21},
				{62,65,19,15,15,15,16,61,62,62},
				{15,15,18,4,56,4,17,15,15,16},
				{56,56,56,56,21,56,56,56,56,22},
				{28,39,21,21,21,21,21,21,21,22},
				{0,25,21,21,21,21,21,21,21,22},
			}
		},
		{
			{
				{44,44,44,66,19,15,15,15,16,0},
				{21,21,21,67,25,21,21,21,17,16},
				{21,21,21,67,25,21,21,21,21,22},
				{62,62,21,65,25,21,21,21,21,22},
				{19,15,26,15,18,59,21,21,21,22},
				{25,21,21,21,21,4,21,21,21,22},
				{25,21,21,21,21,56,21,21,21,22},
				{38,28,28,28,28,28,39,21,40,31},
			}
		},
		{
			{
				{0,19,15,15,15,32,15,15,16,57},
				{19,18,68,68,68,69,68,68,17,16},
				{25,68,68,68,68,68,68,68,68,22},
				{25,68,68,68,68,68,68,68,68,22},
				{25,68,68,68,68,68,68,68,68,22},
				{25,68,68,68,68,68,68,68,68,22},
				{38,39,68,68,68,68,68,68,40,31},
				{0,38,28,39,21,21,40,28,31,57},
			}
		},
		{
			{
				{19,15,15,15,51,52,15,15,15,16},
				{25,21,21,21,21,21,21,21,21,22},
				{25,21,21,21,21,21,21,21,21,22},
				{25,21,21,21,21,35,21,21,21,22},
				{25,21,21,23,23,23,23,21,21,22},
				{25,21,21,21,21,21,21,21,21,22},
				{25,21,21,21,21,21,21,21,21,22},
				{38,28,28,28,45,46,28,28,28,31},
			}
		},
		{
			{
				{0,0,0,25,21,22,0,0,0,0},
				{0,0,0,25,21,22,0,0,0,0},
				{0,0,0,25,21,22,0,0,0,0},
				{0,0,0,25,21,22,0,0,0,0},
				{0,0,0,25,21,22,0,0,0,0},
				{0,0,0,25,21,22,0,0,0,0},
				{0,0,0,25,21,22,0,0,0,0},
				{0,0,0,25,21,22,0,0,0,0},
			}
		},
		{
			{
				{0,0,19,15,15,15,15,15,15,16},
				{0,19,18,4,56,56,56,4,4,22},
				{0,25,4,56,24,24,24,56,56,22},
				{0,25,4,24,21,24,24,24,24,70},
				{0,25,4,24,24,24,24,24,24,22},
				{0,25,4,59,24,24,24,59,59,22},
				{0,38,39,4,59,59,59,4,4,22},
				{0,0,38,28,28,28,28,28,28,31},
			}
		},
		{
			{
				{25,21,21,21,21,21,21,21,22,0},
				{25,21,21,23,21,21,23,21,17,15},
				{25,21,21,23,21,21,23,21,21,21},
				{21,21,59,21,21,21,21,59,21,21},
				{25,21,56,21,21,21,21,56,21,21},
				{25,59,21,21,21,21,21,21,21,21},
				{25,4,59,59,21,21,59,59,59,21},
				{38,28,28,28,45,46,28,28,28,28},
			}
		},
		{
			{
				{0,25,21,21,21,21,21,21,21,22},
				{15,18,21,24,24,24,21,21,21,17},
				{21,21,21,24,21,24,21,42,21,21},
				{21,21,21,24,24,24,21,21,21,42},
				{21,21,21,21,21,21,21,21,21,21},
				{21,21,21,21,42,21,21,42,21,21},
				{21,21,21,21,21,21,21,21,21,40},
				{28,28,28,28,28,28,28,28,28,31},
			}
		},
		{
			{
				{19,15,15,15,15,15,18,21,17,16},
				{18,21,21,21,21,21,21,21,21,22},
				{21,21,21,42,42,42,42,42,42,22},
				{42,42,42,42,21,21,21,21,21,71},
				{21,21,21,21,21,21,21,21,21,72},
				{21,21,21,21,21,21,21,21,21,22},
				{39,21,21,21,21,21,21,21,21,22},
				{38,28,28,28,29,30,28,28,28,31},
			}
		},
		{
			{
				{19,15,15,18,21,21,17,15,15,16},
				{25,21,21,21,21,21,21,21,21,22},
				{25,21,21,21,21,21,21,59,33,22},
				{73,21,21,40,28,39,21,4,21,36},
				{74,21,21,17,15,18,21,4,21,37},
				{25,21,21,21,21,21,21,56,33,22},
				{25,21,21,21,21,21,21,21,21,22},
				{38,28,28,28,28,28,28,28,28,31},
			}
		},
		{
			{
				{19,15,15,15,51,52,15,15,15,16},
				{25,24,24,24,24,24,24,24,24,22},
				{25,24,24,24,24,24,24,24,24,22},
				{41,24,24,24,24,24,24,24,24,22},
				{43,24,24,24,24,24,24,24,24,22},
				{25,24,24,24,24,24,24,24,24,22},
				{25,24,24,24,24,24,24,24,24,22},
				{38,28,28,28,28,28,28,28,28,31},
			}
		},
		{
			{
				{0,0,0,25,21,22,0,0,0,0},
				{0,0,0,25,21,22,0,0,0,0},
				{0,0,0,25,21,22,0,0,0,0},
				{0,19,15,18,21,17,15,16,0,0},
				{0,25,21,21,21,21,21,22,0,0},
				{0,25,21,21,35,21,21,22,0,0},
				{0,25,21,21,21,21,21,22,0,0},
				{0,38,28,28,28,28,28,31,0,0},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{57,19,15,15,51,52,15,15,16,0},
				{19,18,75,75,21,21,75,75,17,16},
				{25,75,21,21,21,21,21,21,75,22},
				{25,75,21,23,21,21,23,21,21,71},
				{25,75,21,23,21,21,23,21,21,72},
				{25,75,21,21,21,21,21,21,75,22},
				{38,39,75,75,21,21,75,75,40,31},
				{57,38,28,28,28,28,28,28,31,0},
			}
		},
		{
			{
				{19,15,15,15,15,15,15,15,15,16},
				{25,21,21,21,21,21,21,21,21,22},
				{25,21,21,59,21,21,59,21,21,17},
				{73,21,21,4,21,21,4,21,21,21},
				{74,21,21,56,33,33,56,21,21,21},
				{25,21,21,21,21,21,21,21,21,40},
				{25,21,21,21,21,21,21,21,21,22},
				{38,28,28,39,21,21,40,28,28,31},
			}
		},
		{
			{
				{19,15,15,15,51,52,15,15,15,16},
				{25,4,21,24,24,24,24,21,21,22},
				{18,56,21,24,24,24,24,21,21,22},
				{21,21,21,24,24,24,24,21,21,22},
				{21,21,21,24,24,24,24,21,21,22},
				{39,59,21,23,21,21,23,21,21,22},
				{25,4,21,21,21,21,21,21,21,22},
				{38,28,28,28,28,28,28,28,28,31},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{19,15,15,15,15,15,16,57,57,57},
				{25,21,21,21,21,21,22,57,57,57},
				{25,21,23,24,23,21,17,15,15,16},
				{25,21,24,21,24,21,21,21,21,71},
				{25,21,24,24,24,21,21,21,21,72},
				{25,21,21,21,21,21,40,28,28,31},
				{25,21,21,21,21,21,22,0,0,0},
				{38,28,28,28,28,28,31,0,0,0},
			}
		},
		{
			{
				{57,19,15,15,15,15,15,15,16,0},
				{19,18,56,56,56,56,56,56,17,16},
				{25,56,21,21,21,21,21,21,56,17},
				{73,21,24,21,21,21,21,21,21,21},
				{74,21,21,21,21,21,21,21,21,21},
				{25,59,21,21,21,21,21,21,59,40},
				{38,39,59,59,59,59,59,59,40,31},
				{0,38,28,28,28,28,28,28,31,57},
			}
		},
		{
			{
				{19,15,15,18,21,21,17,15,15,16},
				{25,24,24,24,24,24,24,24,24,22},
				{18,24,23,23,21,21,23,23,24,22},
				{21,24,23,21,21,21,21,23,24,22},
				{21,24,23,21,21,21,21,23,24,22},
				{39,24,21,76,77,77,78,21,24,22},
				{25,24,24,79,80,81,82,24,24,22},
				{38,28,28,83,84,85,86,28,28,31},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		},
		{
			{
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0},
			}
		}
	};
	ti.roomsAcross = 7;
	ti.roomsDown = 6;
	ti.tilemap = SpriteResource::SPR_DUNGEON_1_TAIL_CAVE;


	m_tileMaps[RM_TAIL_CAVE] = ti;
}

void Tilemap::setTileMap(RoomName tilemap) noexcept
{
	assert(tilemap > RM_NONE && tilemap < RM_COUNT);
	m_currentTileMap = m_tileMaps[tilemap];
}

TileRoom Tilemap::getRoomTiles(size_t roomIndex) const noexcept
{
	// Check room index is within bounds
	assert(roomIndex < (size_t)(m_currentTileMap.roomsAcross * m_currentTileMap.roomsDown));
	// Check if there is a room
	assert(m_currentTileMap.rooms.size());

	return m_currentTileMap.rooms[roomIndex];
}

int Tilemap::roomsAcross() const noexcept
{
	assert(m_currentTileMap.roomsAcross > 0);
	return m_currentTileMap.roomsAcross;
}

int Tilemap::roomsDown() const noexcept
{
	assert(m_currentTileMap.roomsDown > 0);
	return m_currentTileMap.roomsDown;
}

Sprite Tilemap::getTilemap() const noexcept
{
	return ResourceManager::getInstance()[m_currentTileMap.tilemap];
}

}